static KEYWORDS: ::phf::Map<&'static UncasedStr, TokenType> = 
::phf::Map {
    key: 7485420634051515786,
    disps: &[
        (0, 0),
        (0, 6),
        (0, 24),
        (7, 50),
        (1, 11),
        (0, 0),
        (2, 76),
        (3, 0),
        (0, 39),
        (0, 84),
        (0, 68),
        (0, 41),
        (0, 1),
        (0, 14),
        (1, 2),
        (0, 42),
        (2, 134),
        (20, 9),
        (0, 12),
        (0, 0),
        (96, 87),
        (3, 86),
        (1, 91),
        (0, 32),
        (0, 11),
        (9, 92),
        (2, 120),
        (0, 15),
        (0, 0),
        (1, 22),
    ],
    entries: &[
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("DEFERRED") }, TokenType::TK_DEFERRED),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("SET") }, TokenType::TK_SET),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("INSERT") }, TokenType::TK_INSERT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("WINDOW") }, TokenType::TK_WINDOW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("GENERATED") }, TokenType::TK_GENERATED),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("WHERE") }, TokenType::TK_WHERE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("RETURNING") }, TokenType::TK_RETURNING),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("USING") }, TokenType::TK_USING),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("PRECEDING") }, TokenType::TK_PRECEDING),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("NATURAL") }, TokenType::TK_JOIN_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("GROUP") }, TokenType::TK_GROUP),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("HAVING") }, TokenType::TK_HAVING),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("INTERSECT") }, TokenType::TK_INTERSECT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("RECURSIVE") }, TokenType::TK_RECURSIVE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("THEN") }, TokenType::TK_THEN),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ASC") }, TokenType::TK_ASC),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("WITHOUT") }, TokenType::TK_WITHOUT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("AUTOINCREMENT") }, TokenType::TK_AUTOINCR),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("OR") }, TokenType::TK_OR),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("DEFAULT") }, TokenType::TK_DEFAULT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("VALUES") }, TokenType::TK_VALUES),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("QUERY") }, TokenType::TK_QUERY),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("FOLLOWING") }, TokenType::TK_FOLLOWING),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("DESC") }, TokenType::TK_DESC),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("DEFERRABLE") }, TokenType::TK_DEFERRABLE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("NO") }, TokenType::TK_NO),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("PLAN") }, TokenType::TK_PLAN),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("COMMIT") }, TokenType::TK_COMMIT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("UNBOUNDED") }, TokenType::TK_UNBOUNDED),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("REINDEX") }, TokenType::TK_REINDEX),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("TO") }, TokenType::TK_TO),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("GLOB") }, TokenType::TK_LIKE_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("MATERIALIZED") }, TokenType::TK_MATERIALIZED),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("LAST") }, TokenType::TK_LAST),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("NULLS") }, TokenType::TK_NULLS),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("VIEW") }, TokenType::TK_VIEW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("CASE") }, TokenType::TK_CASE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ORDER") }, TokenType::TK_ORDER),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("MATCH") }, TokenType::TK_MATCH),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("PRIMARY") }, TokenType::TK_PRIMARY),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ALL") }, TokenType::TK_ALL),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("FIRST") }, TokenType::TK_FIRST),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ROW") }, TokenType::TK_ROW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("RELEASE") }, TokenType::TK_RELEASE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("CHECK") }, TokenType::TK_CHECK),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("RESTRICT") }, TokenType::TK_RESTRICT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("REPLACE") }, TokenType::TK_REPLACE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("NULL") }, TokenType::TK_NULL),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("CURRENT") }, TokenType::TK_CURRENT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("REFERENCES") }, TokenType::TK_REFERENCES),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("CROSS") }, TokenType::TK_JOIN_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("FILTER") }, TokenType::TK_FILTER),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("IN") }, TokenType::TK_IN),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("RENAME") }, TokenType::TK_RENAME),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("OVER") }, TokenType::TK_OVER),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("REGEXP") }, TokenType::TK_LIKE_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("EACH") }, TokenType::TK_EACH),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ON") }, TokenType::TK_ON),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("EXISTS") }, TokenType::TK_EXISTS),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("NOT") }, TokenType::TK_NOT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("CAST") }, TokenType::TK_CAST),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("RIGHT") }, TokenType::TK_JOIN_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("TEMPORARY") }, TokenType::TK_TEMP),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("BEFORE") }, TokenType::TK_BEFORE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ALTER") }, TokenType::TK_ALTER),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ROWS") }, TokenType::TK_ROWS),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("INDEX") }, TokenType::TK_INDEX),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("RANGE") }, TokenType::TK_RANGE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("TRANSACTION") }, TokenType::TK_TRANSACTION),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("CREATE") }, TokenType::TK_CREATE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("BETWEEN") }, TokenType::TK_BETWEEN),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("UNION") }, TokenType::TK_UNION),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("DROP") }, TokenType::TK_DROP),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("TIES") }, TokenType::TK_TIES),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("INITIALLY") }, TokenType::TK_INITIALLY),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("INTO") }, TokenType::TK_INTO),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("CURRENT_DATE") }, TokenType::TK_CTIME_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("UNIQUE") }, TokenType::TK_UNIQUE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("SAVEPOINT") }, TokenType::TK_SAVEPOINT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("GROUPS") }, TokenType::TK_GROUPS),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("SELECT") }, TokenType::TK_SELECT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("END") }, TokenType::TK_END),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("AND") }, TokenType::TK_AND),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("DISTINCT") }, TokenType::TK_DISTINCT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ALWAYS") }, TokenType::TK_ALWAYS),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("BEGIN") }, TokenType::TK_BEGIN),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("FOREIGN") }, TokenType::TK_FOREIGN),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ESCAPE") }, TokenType::TK_ESCAPE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("WHEN") }, TokenType::TK_WHEN),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("FULL") }, TokenType::TK_JOIN_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("OF") }, TokenType::TK_OF),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ISNULL") }, TokenType::TK_ISNULL),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("IS") }, TokenType::TK_IS),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("CONFLICT") }, TokenType::TK_CONFLICT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ROLLBACK") }, TokenType::TK_ROLLBACK),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("DO") }, TokenType::TK_DO),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("READONLY") }, TokenType::TK_READONLY),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("CURRENT_TIMESTAMP") }, TokenType::TK_CTIME_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("TEMP") }, TokenType::TK_TEMP),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("DATABASE") }, TokenType::TK_DATABASE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("OFFSET") }, TokenType::TK_OFFSET),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("CONSTRAINT") }, TokenType::TK_CONSTRAINT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("PARTITION") }, TokenType::TK_PARTITION),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("INSTEAD") }, TokenType::TK_INSTEAD),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("LEFT") }, TokenType::TK_JOIN_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("EXCLUDE") }, TokenType::TK_EXCLUDE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("PRAGMA") }, TokenType::TK_PRAGMA),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("JOIN") }, TokenType::TK_JOIN),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("DETACH") }, TokenType::TK_DETACH),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("LIKE") }, TokenType::TK_LIKE_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("CASCADE") }, TokenType::TK_CASCADE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("OUTER") }, TokenType::TK_JOIN_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("TABLE") }, TokenType::TK_TABLE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ELSE") }, TokenType::TK_ELSE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ABORT") }, TokenType::TK_ABORT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("WITH") }, TokenType::TK_WITH),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("AFTER") }, TokenType::TK_AFTER),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("EXPLAIN") }, TokenType::TK_EXPLAIN),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("COLLATE") }, TokenType::TK_COLLATE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("IF") }, TokenType::TK_IF),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("INDEXED") }, TokenType::TK_INDEXED),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("VACUUM") }, TokenType::TK_VACUUM),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("OTHERS") }, TokenType::TK_OTHERS),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("COLUMN") }, TokenType::TK_COLUMNKW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("LIMIT") }, TokenType::TK_LIMIT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("CURRENT_TIME") }, TokenType::TK_CTIME_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("EXCLUSIVE") }, TokenType::TK_EXCLUSIVE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("IGNORE") }, TokenType::TK_IGNORE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("RAISE") }, TokenType::TK_RAISE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("FAIL") }, TokenType::TK_FAIL),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ADD") }, TokenType::TK_ADD),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("KEY") }, TokenType::TK_KEY),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("INNER") }, TokenType::TK_JOIN_KW),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("EXCEPT") }, TokenType::TK_EXCEPT),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ATTACH") }, TokenType::TK_ATTACH),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("UPDATE") }, TokenType::TK_UPDATE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("NOTHING") }, TokenType::TK_NOTHING),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("NOTNULL") }, TokenType::TK_NOTNULL),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("AS") }, TokenType::TK_AS),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("VIRTUAL") }, TokenType::TK_VIRTUAL),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("IMMEDIATE") }, TokenType::TK_IMMEDIATE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("TRIGGER") }, TokenType::TK_TRIGGER),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ANALYZE") }, TokenType::TK_ANALYZE),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("ACTION") }, TokenType::TK_ACTION),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("BY") }, TokenType::TK_BY),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("FROM") }, TokenType::TK_FROM),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("FOR") }, TokenType::TK_FOR),
        (unsafe { ::core::mem::transmute::<&'static str, &'static UncasedStr>("DELETE") }, TokenType::TK_DELETE),
    ],
};